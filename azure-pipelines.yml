pool:
  vmImage: 'ubuntu-16.04' 

trigger:
  branches:
    include:
      - master
      - develop

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    tasks: 'clean build'

- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    tasks: '-b build-11.gradle assemble'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
# https://devblogs.microsoft.com/devops/automating-releases-in-github-through-azure-pipelines/
#- task: GitHubRelease@0
#  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
#  inputs:
#    gitHubConnection:
#    repositoryName: '$(Build.Repository.Name)'
#    action: 'create' # Options: create, edit, delete
#    target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
#    tagSource: 'auto' # Required when action == Create# Options: auto, manual
    #tagPattern: # Optional
    #tag: # Required when action == Edit || Action == Delete || TagSource == Manual
    #title: # Optional
    #assets: '$(Build.ArtifactStagingDirectory)/*' # Optional
    #assetUploadMode: 'delete' # Optional. Options: delete, replace
    #isDraft: false # Optional
    #isPreRelease: false # Optional
    #addChangeLog: true # Optional
    #compareWith: 'lastFullRelease' # Required when addChangeLog == True. Options: lastFullRelease, lastRelease, lastReleaseByTag
    #releaseTag: # Required when compareWith == LastReleaseByTag