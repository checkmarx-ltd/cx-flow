pool:
  vmImage: 'ubuntu-16.04' 

trigger:
  branches:
    include:
      - master
pr:
  branches:
    include:
      - master
      - develop

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    tasks: 'clean build'

- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    tasks: '-b build-11.gradle assemble'

- task: CmdLine@2
  inputs:
  script: |
    chmod u+x ./gradlew
    ./gradlew -q getVersion > ./build/libs/version.txt
    CX_FLOW_VERISON=$(cat ./build/libs/version.txt)

- task: CmdLine@2
  inputs:
  script: echo ${CX_FLOW_VERISON}

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: './build/libs'
    artifactName: 'release'
    displayName: 'Publish Artifact'

# https://devblogs.microsoft.com/devops/automating-releases-in-github-through-azure-pipelines/
â€“ task: GithubRelease@0
  displayName: 'Create GitHub Release'
  inputs:
    githubConnection: checkmarx-ltd
    repositoryName: checkmarx-ltd/cx-flow
    tagSource: manual
    tag: $(CX_FLOW_VERSION)
    assets: ./build/libs/*.jar
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

